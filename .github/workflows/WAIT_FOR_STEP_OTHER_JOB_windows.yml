name: WAIT_FOR_STEP_OTHER_JOB_windows

on: [workflow_dispatch]

jobs:
  job1:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        id: checkout
        # uses: actions/checkout@v2
        run: echo "dummy checkout in job 1"
      - name: Set environment variable
        if: steps.checkout.outcome == 'success'
        id: set_var
        run: echo "MY_VAR=some_value" >> $env:GITHUB_ENV
      - name: Save environment variable to artifact
        if: steps.set_var.outcome == 'success'
        run: echo "MY_VAR=some_value" > my_var.txt
      - name: Upload artifact
        if: steps.set_var.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: my_var
          path: my_var.txt
      - name: List uploaded artifacts
        run: ls -R

  job2:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        # uses: actions/checkout@v2
        run: echo "dummy checkout in job2"
      - name: wait for artifact 
        run: Start-Sleep -Seconds 5
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: my_var
          path: .
          # name: my_var
          # path: my_var.txt
      - name: Wait for MY_VAR to be set
        run: |
          $timeout = 300  # Timeout in seconds (5 minutes)
          $start_time = Get-Date
          # while ((Get-Content my_var.txt) -ne "MY_VAR=some_value") {
          while ((Get-ChildItem my_var.txt) -ne "MY_VAR=some_value") {
            Write-Output "Waiting for MY_VAR to be set..."
            Start-Sleep -Seconds 5
            $current_time = Get-Date
            $elapsed_time = ($current_time - $start_time).TotalSeconds
            Write-Output "Elapsed time: $elapsed_time seconds"
            if ($elapsed_time -ge $timeout) {
              Write-Output "Timeout reached. Exiting..."
              exit 1
            }
          }
      - name: Use environment variable
        run: |
          $env:MY_VAR = (Get-Content my_var.txt).Split('=')[1]
          Write-Output "The value of MY_VAR is $env:MY_VAR"
